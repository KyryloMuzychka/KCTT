import{_ as t,c as e,o as a,O as i}from"./chunks/framework.3ec6c483.js";const p=JSON.parse('{"title":"Event class","description":"","frontmatter":{},"headers":[],"relativePath":"api/elements/event.md"}'),s={name:"api/elements/event.md"},n=i('<h1 id="event-class" tabindex="-1">Event class <a class="header-anchor" href="#event-class" aria-label="Permalink to &quot;Event class&quot;">​</a></h1><h2 id="event-name-date-starttime-endtime" tabindex="-1">Event(name, date, startTime, endtime) <a class="header-anchor" href="#event-name-date-starttime-endtime" aria-label="Permalink to &quot;Event(name, date, startTime, endtime)&quot;">​</a></h2><p>Конструктор класу Event для визначення початкових значень екземпляру Event.</p><h2 id="public-api" tabindex="-1">Public API <a class="header-anchor" href="#public-api" aria-label="Permalink to &quot;Public API&quot;">​</a></h2><h3 id="std-string-getid" tabindex="-1">std::string GetId() <a class="header-anchor" href="#std-string-getid" aria-label="Permalink to &quot;std::string GetId()&quot;">​</a></h3><p>Функція для отримання унікального номеру івента.</p><h3 id="std-string-getname" tabindex="-1">std::string GetName() <a class="header-anchor" href="#std-string-getname" aria-label="Permalink to &quot;std::string GetName()&quot;">​</a></h3><p>Функція для отримання імені івента.</p><h3 id="std-string-getdate" tabindex="-1">std::string GetDate() <a class="header-anchor" href="#std-string-getdate" aria-label="Permalink to &quot;std::string GetDate()&quot;">​</a></h3><p>Функція для отримання дати івента.</p><h3 id="std-string-getstatus" tabindex="-1">std::string GetStatus() <a class="header-anchor" href="#std-string-getstatus" aria-label="Permalink to &quot;std::string GetStatus()&quot;">​</a></h3><p>Функція для отримання статусу івента.</p><h3 id="std-string-getstarttime" tabindex="-1">std::string GetStartTime() <a class="header-anchor" href="#std-string-getstarttime" aria-label="Permalink to &quot;std::string GetStartTime()&quot;">​</a></h3><p>Функція для отримання часу початку івента.</p><h3 id="std-string-getendtime" tabindex="-1">std::string GetEndTime() <a class="header-anchor" href="#std-string-getendtime" aria-label="Permalink to &quot;std::string GetEndTime()&quot;">​</a></h3><p>Функція для отримання часу кінця івенту.</p><h3 id="void-setname-std-string-newname" tabindex="-1">void SetName(std::string newName) <a class="header-anchor" href="#void-setname-std-string-newname" aria-label="Permalink to &quot;void SetName(std::string newName)&quot;">​</a></h3><p>Функція для редагування поточного імені івенту.</p><h3 id="void-setdate-std-string-newdate" tabindex="-1">void SetDate(std::string newDate) <a class="header-anchor" href="#void-setdate-std-string-newdate" aria-label="Permalink to &quot;void SetDate(std::string newDate)&quot;">​</a></h3><p>Функція для редагування поточной дати івенту.</p><h3 id="void-setstatus-std-string-newstatus" tabindex="-1">void SetStatus(std::string newStatus) <a class="header-anchor" href="#void-setstatus-std-string-newstatus" aria-label="Permalink to &quot;void SetStatus(std::string newStatus)&quot;">​</a></h3><p>Функція для редагування поточного статусу івенту.</p><h3 id="void-setstarttime-std-string-newstarttime" tabindex="-1">void SetStartTime(std::string newStartTime) <a class="header-anchor" href="#void-setstarttime-std-string-newstarttime" aria-label="Permalink to &quot;void SetStartTime(std::string newStartTime)&quot;">​</a></h3><p>Функція для редагування часу початку івенту.</p><h3 id="void-setendtime-std-string-newendtime" tabindex="-1">void SetEndTime(std::string newEndTime) <a class="header-anchor" href="#void-setendtime-std-string-newendtime" aria-label="Permalink to &quot;void SetEndTime(std::string newEndTime)&quot;">​</a></h3><p>Функція для редагування часу кінця івенту.</p><h2 id="private-api" tabindex="-1">Private API <a class="header-anchor" href="#private-api" aria-label="Permalink to &quot;Private API&quot;">​</a></h2><ul><li><p><code>std::string</code> id - унікальний номер івента.</p><ul><li>Формат: <strong>e[n]</strong> (e1, e2, e3 etc.)</li></ul></li><li><p><code>std::string</code> name - ім&#39;я івента.</p></li><li><p><code>std::string</code> status - поточний статус проєкта.</p></li><li><p><code>std::string</code> date - дата проведення івента</p><ul><li>Формат: <strong>dd.mm.yyyy</strong> (24.04.2022)</li></ul></li><li><p><code>std::string</code> startTime - час, коли івент буде відкритим.</p><ul><li>Формат: <strong>HH:MM</strong> (17:30)</li></ul></li><li><p><code>std::string</code> endTime - час, коли івент закінчиться.</p><ul><li>Формат: <strong>HH:MM</strong> (21:40)</li></ul></li></ul>',28),d=[n];function r(o,l,h,m,c,g){return a(),e("div",null,d)}const v=t(s,[["render",r]]);export{p as __pageData,v as default};
