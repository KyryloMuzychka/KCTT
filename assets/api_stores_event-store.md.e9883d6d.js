import{_ as e,c as t,o as a,O as i}from"./chunks/framework.3ec6c483.js";const u=JSON.parse('{"title":"EventStore class","description":"","frontmatter":{},"headers":[],"relativePath":"api/stores/event-store.md"}'),d={name:"api/stores/event-store.md"},n=i('<h1 id="eventstore-class" tabindex="-1">EventStore class <a class="header-anchor" href="#eventstore-class" aria-label="Permalink to &quot;EventStore class&quot;">​</a></h1><h2 id="eventstore" tabindex="-1">EventStore() <a class="header-anchor" href="#eventstore" aria-label="Permalink to &quot;EventStore()&quot;">​</a></h2><p>Конструктор класа EventStore для визначення початкових значень екземпляра EventStore.</p><h2 id="public-api" tabindex="-1">Public API <a class="header-anchor" href="#public-api" aria-label="Permalink to &quot;Public API&quot;">​</a></h2><h3 id="int-getsize" tabindex="-1">int GetSize() <a class="header-anchor" href="#int-getsize" aria-label="Permalink to &quot;int GetSize()&quot;">​</a></h3><p>Функція для підрахунку усіх елементів вектора.</p><h3 id="void-add-event-event" tabindex="-1">void Add(Event *event) <a class="header-anchor" href="#void-add-event-event" aria-label="Permalink to &quot;void Add(Event *event)&quot;">​</a></h3><p>Функція для додавання івенту у вектор.</p><h3 id="void-delete-size-t-index" tabindex="-1">void Delete(size_t index) <a class="header-anchor" href="#void-delete-size-t-index" aria-label="Permalink to &quot;void Delete(size_t index)&quot;">​</a></h3><p>Функція для видалення элементів з вектора.</p><h3 id="void-deleteall" tabindex="-1">void DeleteAll() <a class="header-anchor" href="#void-deleteall" aria-label="Permalink to &quot;void DeleteAll()&quot;">​</a></h3><p>Функція для очищення вектора.</p><h3 id="void-deletebyid-std-string-id" tabindex="-1">void DeleteById(std::string id) <a class="header-anchor" href="#void-deletebyid-std-string-id" aria-label="Permalink to &quot;void DeleteById(std::string id)&quot;">​</a></h3><p>Функція для видалення элементів з вектора через їх id.</p><h3 id="void-deletebyname-std-string-name" tabindex="-1">void DeleteByName(std::string name) <a class="header-anchor" href="#void-deletebyname-std-string-name" aria-label="Permalink to &quot;void DeleteByName(std::string name)&quot;">​</a></h3><p>Функція для видалення усіх елементів з вектора по імені.</p><h3 id="void-deletebydate-std-string-date" tabindex="-1">void DeleteByDate(std::string date) <a class="header-anchor" href="#void-deletebydate-std-string-date" aria-label="Permalink to &quot;void DeleteByDate(std::string date)&quot;">​</a></h3><p>Функція для видалення усіх елементів з вектора по даті.</p><h3 id="void-existsbyid-std-string-id" tabindex="-1">void ExistsById(std::string id) <a class="header-anchor" href="#void-existsbyid-std-string-id" aria-label="Permalink to &quot;void ExistsById(std::string id)&quot;">​</a></h3><p>Функція для перевірки на існування по id.</p><h3 id="event-get-size-t-index" tabindex="-1">Event *Get(size_t index) <a class="header-anchor" href="#event-get-size-t-index" aria-label="Permalink to &quot;Event *Get(size_t index)&quot;">​</a></h3><p>Функція для отримання елемента.</p><h3 id="event-findbyid-std-string-id" tabindex="-1">Event *FindById(std::string id) <a class="header-anchor" href="#event-findbyid-std-string-id" aria-label="Permalink to &quot;Event *FindById(std::string id)&quot;">​</a></h3><p>Функція для пошуку через id.</p><h3 id="std-vector-event-findbydate-std-string-date" tabindex="-1">std::vector&lt;Event *&gt; FindByDate(std::string date) <a class="header-anchor" href="#std-vector-event-findbydate-std-string-date" aria-label="Permalink to &quot;std::vector&lt;Event *&gt; FindByDate(std::string date)&quot;">​</a></h3><p>Пошук елемента по даті в векторі.</p><h3 id="std-vector-event-findbyname-std-string-name" tabindex="-1">std::vector&lt;Event *&gt; FindByName(std::string name) <a class="header-anchor" href="#std-vector-event-findbyname-std-string-name" aria-label="Permalink to &quot;std::vector&lt;Event *&gt; FindByName(std::string name)&quot;">​</a></h3><p>Пошук елемента по імені в векторі.</p><h2 id="private-api" tabindex="-1">Private API <a class="header-anchor" href="#private-api" aria-label="Permalink to &quot;Private API&quot;">​</a></h2><h3 id="std-vector-event-events" tabindex="-1">std::vector&lt;Event *&gt; events <a class="header-anchor" href="#std-vector-event-events" aria-label="Permalink to &quot;std::vector&lt;Event *&gt; events&quot;">​</a></h3><p>Вектор який зберігає івенти.</p>',31),s=[n];function r(o,l,v,h,c,b){return a(),t("div",null,s)}const m=e(d,[["render",r]]);export{u as __pageData,m as default};
