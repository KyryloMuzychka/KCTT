import{_ as e,c as t,o as a,O as i}from"./chunks/framework.3ec6c483.js";const p=JSON.parse('{"title":"user-customer class","description":"","frontmatter":{},"headers":[],"relativePath":"api/users/user-customer.md"}'),o={name:"api/users/user-customer.md"},r=i('<h1 id="user-customer-class" tabindex="-1">user-customer class <a class="header-anchor" href="#user-customer-class" aria-label="Permalink to &quot;user-customer class&quot;">​</a></h1><h2 id="customer-std-string-name-std-string-login-std-string-password" tabindex="-1">Customer(std::string name, std::string login, std::string password) <a class="header-anchor" href="#customer-std-string-name-std-string-login-std-string-password" aria-label="Permalink to &quot;Customer(std::string name, std::string login, std::string password)&quot;">​</a></h2><p>Конструктор класса Customer для определение начальных значенией экземпляра Customer.</p><h2 id="public-api" tabindex="-1">Public API <a class="header-anchor" href="#public-api" aria-label="Permalink to &quot;Public API&quot;">​</a></h2><h3 id="void-printmenu-char-action-override" tabindex="-1">void PrintMenu(char *action) override <a class="header-anchor" href="#void-printmenu-char-action-override" aria-label="Permalink to &quot;void PrintMenu(char *action) override&quot;">​</a></h3><p>Наследуемая функция для отрисовки меню пользователя.</p><h3 id="void-activatemenu-char-action-override" tabindex="-1">void ActivateMenu(char *action) override <a class="header-anchor" href="#void-activatemenu-char-action-override" aria-label="Permalink to &quot;void ActivateMenu(char *action) override&quot;">​</a></h3><p>Наследуемая функция для активации любого обраного варианту из отрисованого меню.</p><h3 id="void-tobuyticket" tabindex="-1">void ToBuyTicket() <a class="header-anchor" href="#void-tobuyticket" aria-label="Permalink to &quot;void ToBuyTicket()&quot;">​</a></h3><p>Функция для забронирования тикета.</p><h3 id="void-tocancelticket" tabindex="-1">void ToCancelTicket() <a class="header-anchor" href="#void-tocancelticket" aria-label="Permalink to &quot;void ToCancelTicket()&quot;">​</a></h3><p>Функция для отмены бронирования тикета.</p><h3 id="void-tofindeventbyname" tabindex="-1">void ToFindEventByName() <a class="header-anchor" href="#void-tofindeventbyname" aria-label="Permalink to &quot;void ToFindEventByName()&quot;">​</a></h3><p>Функция для поиска ивента по его имени.</p><h3 id="void-tofindeventbydate" tabindex="-1">void ToFindEventByDate() <a class="header-anchor" href="#void-tofindeventbydate" aria-label="Permalink to &quot;void ToFindEventByDate()&quot;">​</a></h3><p>Функция для поиска ивента по его дате.</p><h3 id="void-toprintallevents" tabindex="-1">void ToPrintAllEvents() <a class="header-anchor" href="#void-toprintallevents" aria-label="Permalink to &quot;void ToPrintAllEvents()&quot;">​</a></h3><p>Функция для отрисовки всех ивентов.</p><h3 id="void-toprintboughttickets" tabindex="-1">void ToPrintBoughtTickets() <a class="header-anchor" href="#void-toprintboughttickets" aria-label="Permalink to &quot;void ToPrintBoughtTickets()&quot;">​</a></h3><p>Функция для отрисовки всех забронированых ивентов.</p>',20),n=[r];function s(d,c,l,h,u,v){return a(),t("div",null,n)}const b=e(o,[["render",s]]);export{p as __pageData,b as default};
